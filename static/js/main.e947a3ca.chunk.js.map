{"version":3,"sources":["features/counter/counterAPI.js","features/counter/counterSlice.js","api/animeAPI.js","reducers/anime/index.js","app/store.js","serviceWorker.js","components/cards/CardsContainerCarosuel.js","components/cards/Card.js","components/loader/Loader.js","containers/Home.js","layout/MainFooter.js","layout/MainNavbar.js","layout/Layout.js","routes/router.js","index.js","components/cards/cards.module.css"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","getAnimeByQuery","query","fetch","then","json","catch","error","fetchAnimeByQuery","console","log","animeSlice","anime","loading","getAnime","episodes","results","selectAnime","selectLoading","store","configureStore","reducer","counter","counterReducer","animeReducer","Boolean","window","location","hostname","match","CardsContainerCarosuel","children","className","styles","card__container","Card","image_url","url","title","airing","end_date","mal_id","members","rated","score","start_date","synopsis","type","card","card__img","src","alt","card__overlay","card__name","Loader","style","Home","useSelector","isLoading","length","map","result","MainFooter","href","role","MainNavbar","dispatch","useDispatch","useState","setquery","onSubmit","e","preventDefault","placeholder","aria-label","onChange","target","Layout","Router","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e947a3ca.chunk.js","sourcesContent":["// A mock function to mimic making an async request for data\nfunction fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\nexport default fetchCount;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport fetchCount from \"./counterAPI\";\n\nconst initialState = {\n  value: 0,\n  status: \"idle\",\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  \"counter/fetchCount\",\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","const API_URL = \"https://api.jikan.moe/v3\";\n\n//  api.jikan.moe/v3/search/anime?q=bleach\nexport const getAnimeByQuery = (query) => {\n  return fetch(`${API_URL}/search/anime?q=${query}`)\n    .then((response) => response.json())\n    .catch((error) => error);\n};\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getAnimeByQuery } from \"../../api/animeAPI\";\n\nconst initialState = {\n  anime: {},\n  loading: false,\n};\n\nexport const fetchAnimeByQuery = createAsyncThunk(\n  \"anime/fetchAnimeByQuery\",\n  async (query) => {\n    const response = await getAnimeByQuery(query);\n    // The value we return becomes the `fulfilled` action payload\n    console.log(\"response\", response);\n    return response;\n  }\n);\n\nexport const animeSlice = createSlice({\n  name: \"anime\",\n  initialState,\n  reducers: {\n    getAnime: (state) => {\n      state.anime = { name: \"Boku no hero\", episodes: 120 };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchAnimeByQuery.pending, (state) => {\n        state.loading = true;\n        console.log(\"pending\", state.loading);\n      })\n      .addCase(fetchAnimeByQuery.fulfilled, (state, action) => {\n        state.anime = action.payload.results;\n        state.loading = false;\n      });\n  },\n});\n\nexport const { getAnime } = animeSlice.actions;\n\nexport const selectAnime = (state) => state.anime.anime;\nexport const selectLoading = (state) => state.anime.loading;\n\nexport default animeSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport animeReducer from \"../reducers/anime/index\";\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    anime: animeReducer,\n  },\n});\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport styles from \"./cards.module.css\";\n\nconst CardsContainerCarosuel = ({ children }) => {\n  return (\n    <>\n      <div className={styles.card__container}>{children}</div>\n    </>\n  );\n};\n\nexport default CardsContainerCarosuel;\n","import React from \"react\";\nimport styles from \"./cards.module.css\";\n\nconst Card = ({ anime }) => {\n  const {\n    url,\n    image_url,\n    airing,\n    end_date,\n    episodes,\n    mal_id,\n    members,\n    rated,\n    score,\n    start_date,\n    synopsis,\n    title,\n    type,\n  } = anime;\n  return (\n    <div className={styles.card}>\n      <img className={styles.card__img} src={image_url} alt=\"image_url\" />\n\n      <div className={styles.card__overlay}>\n        <i className=\"fas fa-play\" />\n        <span className={styles.card__name}>{title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./loader.css\";\n\nconst Loader = () => {\n  return (\n    <>\n      <div className=\"loader\">\n        <span>↓</span>\n        <span className=\"arrow\" style={{ \"--delay\": \"0.1s\" }}>\n          ↓\n        </span>\n        <span className=\"arrow\" style={{ \"--delay\": \"0.3s\" }}>\n          ↓\n        </span>\n        <span className=\"arrow\" style={{ \"--delay\": \"0.4s\" }}>\n          ↓\n        </span>\n        <span className=\"arrow\" style={{ \"--delay\": \"0.5s\" }}>\n          ↓\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CardsContainerCarosuel from \"../components/cards/CardsContainerCarosuel\";\nimport Card from \"../components/cards/Card\";\nimport { selectAnime, selectLoading } from \"../reducers/anime/index\";\nimport Loader from \"../components/loader/Loader\";\n\nconst Home = () => {\n  const anime = useSelector(selectAnime);\n  const isLoading = useSelector(selectLoading);\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col text-center\">\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <CardsContainerCarosuel>\n                {anime.length > 1 ? (\n                  anime.map((result) => <Card key={result.mal_id} anime={result} />)\n                ) : (\n                  <span>No result</span>\n                )}\n              </CardsContainerCarosuel>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst MainFooter = () => {\n  return (\n    <>\n      <footer className=\"bg-light text-center text-white\">\n        <div className=\"container p-4 pb-0\">\n          <section className=\"mb-4\">\n            <a\n              className=\"btn btn-primary btn-floating m-1\"\n              style={{ \"background-color\": \"#3b5998\" }}\n              href=\"#!\"\n              role=\"button\"\n            >\n              <i className=\"fab fa-facebook-f\" />\n            </a>\n\n            <a\n              className=\"btn btn-primary btn-floating m-1\"\n              style={{ \"background-color\": \"#55acee\" }}\n              href=\"#!\"\n              role=\"button\"\n            >\n              <i className=\"fab fa-twitter\" />\n            </a>\n\n            <a\n              className=\"btn btn-primary btn-floating m-1\"\n              style={{ \"background-color\": \"#dd4b39\" }}\n              href=\"#!\"\n              role=\"button\"\n            >\n              <i className=\"fab fa-google\" />\n            </a>\n\n            <a\n              className=\"btn btn-primary btn-floating m-1\"\n              style={{ \"background-color\": \"#ac2bac\" }}\n              href=\"#!\"\n              role=\"button\"\n            >\n              <i className=\"fab fa-instagram\" />\n            </a>\n\n            <a\n              className=\"btn btn-primary btn-floating m-1\"\n              style={{ \"background-color\": \"#0082ca\" }}\n              href=\"#!\"\n              role=\"button\"\n            >\n              <i className=\"fab fa-linkedin-in\" />\n            </a>\n\n            <a\n              className=\"btn btn-primary btn-floating m-1\"\n              style={{ \"background-color\": \"#333333\" }}\n              href=\"#!\"\n              role=\"button\"\n            >\n              <i className=\"fab fa-github\" />\n            </a>\n          </section>\n        </div>\n\n        <div\n          className=\"text-center p-3\"\n          style={{ \"background-color\": \"rgba(0, 0, 0, 0.2)\" }}\n        >\n          © 2020 Copyright:\n          <a className=\"text-white\" href=\"https://mdbootstrap.com/\">\n            MDBootstrap.com\n          </a>\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default MainFooter;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchAnimeByQuery } from \"../reducers/anime\";\n\nconst MainNavbar = () => {\n  const dispatch = useDispatch();\n  const [query, setquery] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(fetchAnimeByQuery(query));\n  };\n\n  return (\n    <>\n      <nav className=\"navbar navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\">My anime list</a>\n          <form className=\"d-flex\" onSubmit={handleSubmit}>\n            <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n              onChange={(e) => setquery(e.target.value)}\n            />\n            <button className=\"btn btn-outline-success\" type=\"submit\">\n              Search\n            </button>\n          </form>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default MainNavbar;\n","import React from \"react\";\nimport MainFooter from \"./MainFooter\";\nimport MainNavbar from \"./MainNavbar\";\n\n// eslint-disable-next-line react/prop-types\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <MainNavbar />\n      {children}\n      <MainFooter />\n    </>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"../containers/Home\";\nimport Layout from \"../layout/Layout\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Layout>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route component={Home} />\n      </Switch>\n    </Layout>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\n// import App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport store from \"./app/store\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Router from \"./routes/router\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card__container\":\"cards_card__container__2yPRe\",\"card\":\"cards_card__1CqLb\",\"card__overlay\":\"cards_card__overlay__3sx4G\",\"card__img\":\"cards_card__img__2StJc\",\"card__name\":\"cards_card__name__3OgZS\"};"],"sourceRoot":""}